/* TypeScript file generated by genType. */

// tslint:disable-next-line:no-var-requires
const ColorSquareBS = require('./ColorSquare.bs');

// tslint:disable-next-line:no-var-requires
const CreateBucklescriptBlock = require('bs-platform/lib/es6/block.js');

// tslint:disable-next-line:no-var-requires
const Curry = require('bs-platform/lib/es6/curry.js');

// tslint:disable-next-line:no-var-requires
const ReasonReact = require('reason-react/src/ReasonReact.js');

// tslint:disable-next-line:interface-over-type-literal
export type rgb = {
  readonly r: string, 
  readonly g: string, 
  readonly b: string
};

// tslint:disable-next-line:max-classes-per-file 
export abstract class ColorBlue { protected opaque!: any }; /* simulate opaque types */

export const Blue: ColorBlue = 0 as any;

// tslint:disable-next-line:max-classes-per-file 
export abstract class ColorRgb { protected opaque!: any }; /* simulate opaque types */

export const Rgb: (_1:rgb) => ColorRgb = function _(Arg1) { return CreateBucklescriptBlock.__(0 as any, [[Arg1.r, Arg1.g, Arg1.b]]) }

export type color =
  | ColorBlue
  | ColorRgb;

// tslint:disable-next-line:interface-over-type-literal
export type Props = {
  readonly color: color, 
  readonly size: string, 
  readonly children?: unknown
};

export const ColorSquare: React.ComponentClass<Props> = ReasonReact.wrapReasonForJs(
  ColorSquareBS.component,
  (function _(jsProps: Props) {
     return Curry._3(ColorSquareBS.make, jsProps.color, jsProps.size, jsProps.children);
  }));

export default ColorSquare;
